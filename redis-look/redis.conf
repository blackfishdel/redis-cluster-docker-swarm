min-slaves-to-write 1
min-slaves-max-lag 10

save ""

#aof
#指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为no
appendonly yes

#password
#当master设置了密码保护时,slave服务连接master的密码
#masterauth <master-password>

#base
#redis进程是否以守护进程的方式运行,yes为是,no为否
daemonize yes
#设置数据库的数量，默认数据库为0
databases 10
#当客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
timeout 15000
#redis内部调度（进行关闭timeout的客户端，删除过期key等等）频率
hz 20

#log
#redis日志级别,可用的级别有debug.verbose.notice.warning
#loglevel verbose
#log文件输出位置,如果进程以守护进程的方式运行,此处又将输出文件设置为stdout的话,就会将日志信息输出到/dev/null里面去了
#logfile stdout

#memory
#指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区
maxmemory 2gb
#4种策略volatile-lru、allkeys-lru、volatile-random、allkeys-random、noeviction根据 LRU 算法移除内存中所有的 key
maxmemory-policy allkeys-lru
#五个key然后取最旧的那个，LRU和最小TTL算法的优化
maxmemory-samples 5

#一个Lua脚本最长的执行时间为5000毫秒,0或负数表示无限执行时间
lua-time-limit 5000
#用LATENCY打印redis实例在跑命令时的耗时图表，监视频率，0为不监视
latency-monitor-threshold 0
