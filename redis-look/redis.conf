#==========================================数据库个数
#设置数据库的数量，默认数据库为0
databases 10

#==========================================最大元素数
#配置最大元素数，当超过该配置数据时，redis采用特殊hash算法
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

zset-max-ziplist-entries 128
zset-max-ziplist-value 64

#配置超重对数基数，CPU比较牛的情况下可以上10000
hll-sparse-max-bytes 5000

#==========================================aof
#是否开启AOF
appendonly yes
#AOF文件名
appendfilename "appendonly.aof"
#每秒写入性能 no(操作系统决定)>everysec(每秒写一次)>always(每次立马写入)
appendfsync everysec
#写AOF的时候放弃同步主进程的变化，可能会丢日志，但是在高并发的时候不会出现一卡一卡的现象
no-appendfsync-on-rewrite yes
#AOF文件体积扩大100%的时候重写该日志
auto-aof-rewrite-percentage 100
#除了百分比，再加体积限制
auto-aof-rewrite-min-size 46m
#redis在启动时可以加载被截断的AOF文件
aof-load-truncated yes
#当修改AOF文件时，该设置为yes，则每生成32MB的数据，就进行同步
aof-rewrite-incremental-fsync yes

#==========================================rdb 关闭

save ""

#==========================================复制(从库配置)
min-slaves-to-write 1
min-slaves-max-lag 10

#一旦配置(从配置，主不需要)，则开启主从复制
#slaveof ip 6379
#配置master的密码
#masterauth redispassword
#从丢失主，或者同步过程中，是否可继续响应客户端
slave-serve-stale-data yes

#yes=合并tcp包节省带宽，但产生40ms左右的延时。no=立马发送数据，无延迟。从太多，可以考虑yes
repl-disable-tcp-nodelay yes
#主挂了，从变主的概率，越小概率越高，但0表示永不做主机
slave-priority 100

#==========================================限制
#限制客户端的连接数
maxclients 128
#当客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
timeout 15000
#redis内部调度（进行关闭timeout的客户端，删除过期key等等）频率
hz 20
#最大内存最好不要超过空闲内存的3/5，超过32GB会自动进入64位世界，指针长度*2，20%的空间会被指针消耗，性能略有影响
maxmemory 2gb
#4种策略volatile-lru、allkeys-lru、volatile-random、allkeys-random、noeviction根据 LRU 算法移除内存中所有的 key
maxmemory-policy allkeys-lru
#五个key然后取最旧的那个，LRU和最小TTL算法的优化
maxmemory-samples 5
#一个Lua脚本最长的执行时间为5000毫秒,0或负数表示无限执行时间
lua-time-limit 5000
#用LATENCY打印redis实例在跑命令时的耗时图表，监视频率，0为不监视
latency-monitor-threshold 0
